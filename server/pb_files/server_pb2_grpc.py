# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pb_files.enrollment_pb2 as enrollment__pb2
import pb_files.server_pb2 as server__pb2
import pb_files.student_pb2 as student__pb2


class GradesManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createEnrollment = channel.unary_unary(
                '/GradesManager/createEnrollment',
                request_serializer=enrollment__pb2.Enrollment.SerializeToString,
                response_deserializer=enrollment__pb2.Enrollment.FromString,
                )
        self.getEnrollment = channel.unary_unary(
                '/GradesManager/getEnrollment',
                request_serializer=enrollment__pb2.EnrollmentPkRequest.SerializeToString,
                response_deserializer=enrollment__pb2.Enrollment.FromString,
                )
        self.updateEnrollment = channel.unary_unary(
                '/GradesManager/updateEnrollment',
                request_serializer=enrollment__pb2.UpdateEnrollmentRequest.SerializeToString,
                response_deserializer=enrollment__pb2.Enrollment.FromString,
                )
        self.deleteEnrollment = channel.unary_unary(
                '/GradesManager/deleteEnrollment',
                request_serializer=enrollment__pb2.EnrollmentPkRequest.SerializeToString,
                response_deserializer=server__pb2.Response.FromString,
                )
        self.getAbscensesAndGradesBySubject = channel.unary_unary(
                '/GradesManager/getAbscensesAndGradesBySubject',
                request_serializer=enrollment__pb2.EnrollmentQueryBySubjectRequest.SerializeToString,
                response_deserializer=server__pb2.AbscencesAndGradesBySubjectResponse.FromString,
                )
        self.getStudentsBySubject = channel.unary_unary(
                '/GradesManager/getStudentsBySubject',
                request_serializer=student__pb2.StudentQueryBySubjectRequest.SerializeToString,
                response_deserializer=student__pb2.StudentsResponse.FromString,
                )


class GradesManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createEnrollment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getEnrollment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateEnrollment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteEnrollment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAbscensesAndGradesBySubject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getStudentsBySubject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GradesManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createEnrollment': grpc.unary_unary_rpc_method_handler(
                    servicer.createEnrollment,
                    request_deserializer=enrollment__pb2.Enrollment.FromString,
                    response_serializer=enrollment__pb2.Enrollment.SerializeToString,
            ),
            'getEnrollment': grpc.unary_unary_rpc_method_handler(
                    servicer.getEnrollment,
                    request_deserializer=enrollment__pb2.EnrollmentPkRequest.FromString,
                    response_serializer=enrollment__pb2.Enrollment.SerializeToString,
            ),
            'updateEnrollment': grpc.unary_unary_rpc_method_handler(
                    servicer.updateEnrollment,
                    request_deserializer=enrollment__pb2.UpdateEnrollmentRequest.FromString,
                    response_serializer=enrollment__pb2.Enrollment.SerializeToString,
            ),
            'deleteEnrollment': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteEnrollment,
                    request_deserializer=enrollment__pb2.EnrollmentPkRequest.FromString,
                    response_serializer=server__pb2.Response.SerializeToString,
            ),
            'getAbscensesAndGradesBySubject': grpc.unary_unary_rpc_method_handler(
                    servicer.getAbscensesAndGradesBySubject,
                    request_deserializer=enrollment__pb2.EnrollmentQueryBySubjectRequest.FromString,
                    response_serializer=server__pb2.AbscencesAndGradesBySubjectResponse.SerializeToString,
            ),
            'getStudentsBySubject': grpc.unary_unary_rpc_method_handler(
                    servicer.getStudentsBySubject,
                    request_deserializer=student__pb2.StudentQueryBySubjectRequest.FromString,
                    response_serializer=student__pb2.StudentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'GradesManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GradesManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createEnrollment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GradesManager/createEnrollment',
            enrollment__pb2.Enrollment.SerializeToString,
            enrollment__pb2.Enrollment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getEnrollment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GradesManager/getEnrollment',
            enrollment__pb2.EnrollmentPkRequest.SerializeToString,
            enrollment__pb2.Enrollment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateEnrollment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GradesManager/updateEnrollment',
            enrollment__pb2.UpdateEnrollmentRequest.SerializeToString,
            enrollment__pb2.Enrollment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteEnrollment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GradesManager/deleteEnrollment',
            enrollment__pb2.EnrollmentPkRequest.SerializeToString,
            server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAbscensesAndGradesBySubject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GradesManager/getAbscensesAndGradesBySubject',
            enrollment__pb2.EnrollmentQueryBySubjectRequest.SerializeToString,
            server__pb2.AbscencesAndGradesBySubjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getStudentsBySubject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GradesManager/getStudentsBySubject',
            student__pb2.StudentQueryBySubjectRequest.SerializeToString,
            student__pb2.StudentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
